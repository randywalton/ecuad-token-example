{"version":3,"names":["Sheet","CSSStyleSheet","replaceSync","Card","_HTMLElement","_inherits","_super","_this","_classCallCheck","this","call","templateContent","document","getElementById","content","shadowRoot","attachShadow","mode","appendChild","cloneNode","adoptedStyleSheets","headline","querySelector","copy","key","get","value","_this2","updateStyle","window","addEventListener","e","setAttribute","detail","update","name","oldValue","newValue","dataset","theme","classList","remove","add","elevation","radius","_wrapNativeSuper","HTMLElement","primary","neutral","fontSizes","typography","spacing","lightTheme","darkTheme","constructCSSVars","fetch","then","res","json","data","globalData","global","lightData","light","darkData","dark","push","concat","setCSSVarName","globalStyles","join","sortData","chars","replace","m","customElements","define","themeSelect","siteHeader","body","getElementsByTagName","target","cardUpdated","CustomEvent","bubbles","dispatchEvent"],"sources":["../../src/js/components/CardCss.js","../../src/js/components/Card.js","../../src/js/utils/build-styles.js","../../src/js/index.js"],"sourcesContent":["// Create our component stylesheet:\nconst Sheet = new CSSStyleSheet();\nSheet.replaceSync(\n    `\n        p, h2 {\n            margin:0px;\n            padding:0px;\n            line-height: 1.3;\n        }\n\n        h2 {\n            font-family: var(--global-typeface-headline-family);\n            font-size: var(--global-typeface-headline-size);\n            font-weight: 300;\n            margin-bottom: 0.4rem;\n        }\n\n        p {\n            font-family: var(--global-typeface-copy-family);\n            font-weight: 400;\n            font-size: var(--global-typeface-copy-size);\n        }\n\n        h2.light, p.light{\n            color: var(--light-theme-card-text-color);\n        }\n\n        h2.dark, p.dark{\n            color: var(--dark-theme-card-text-color);\n        }\n\n       \n    `\n);\n\nexport { Sheet }","import { Sheet } from \"./CardCss.js\";\n\nclass Card extends HTMLElement {\n\n\tstatic get observedAttributes() { \n\t\treturn ['data-theme']; //track the theme e.g. light / dark\n\t}\n\n\tconstructor() {\n\t\t// Always call super first in constructor\n\t\tsuper();\n\t\tlet template = document.getElementById('custom-card-template');\n\t\tlet templateContent = template.content;\n\n\t\tconst shadowRoot = this.attachShadow({ mode: 'open' });\n\t\tshadowRoot.appendChild(templateContent.cloneNode(true));\n\n        shadowRoot.adoptedStyleSheets = [Sheet];\n\n\t\t//get elements needed for control\n\t\tthis.headline = this.shadowRoot.querySelector('.headline');\n\t\tthis.copy = this.shadowRoot.querySelector('.copy');\n\n\t}\n\n\tconnectedCallback() {\n\t\t//console.log('connected', this.dataset.theme);\n\t\t//set styles on load\n\t\tthis.updateStyle();\n\n\t\t//listen it the theme is updated with the form input\n\t\twindow.addEventListener('cardUpdated', (e) => {\n\t\t\tthis.setAttribute('data-theme', e.detail.update);\n\t\t});\n\t\t\n\n\t\t\n\n\t}\n\n\tdisconnectedCallback() {\n\t\t//console.log('disconnected', this);\n\t}\n\n\n\tattributeChangedCallback(name, oldValue, newValue) {\n\t\t//console.log('element attributes changed.');\n\t\tthis.updateStyle();\n\t}\n\n\tupdateStyle() {\n\t\t\n\t\tif (this.dataset.theme === 'light') {\n\t\t\t//remove dark if present\n\t\t\tthis.headline.classList.remove('dark');\n\t\t\tthis.copy.classList.remove('dark');\n\t\t\tthis.classList.remove('light-bg');\n\n\t\t\t//add light class styles\n\t\t\tthis.headline.classList.add(this.dataset.theme);\n\t\t\tthis.copy.classList.add(this.dataset.theme);\n\t\t\tthis.classList.add('dark-bg');\n\n\t\t} else {\n\t\t\t//remove light if present\n\t\t\tthis.headline.classList.remove('light');\n\t\t\tthis.copy.classList.remove('light');\n\t\t\tthis.classList.remove('dark-bg');\n\n\t\t\t//add dark class styles\n\t\t\tthis.headline.classList.add(this.dataset.theme);\n\t\t\tthis.copy.classList.add(this.dataset.theme);\n\t\t\tthis.classList.add('light-bg');\n\t\t}\n\n\t\t//elevation & radius added, not connected to theme change\n\t\tthis.classList.add('emphasis-'+this.dataset.elevation);\n\t\tthis.classList.add('radius-'+this.dataset.radius);\n\t}\n\n\n\t\n\n}\n\nexport { Card }","\n// Arrays for token sets\nlet primary = [];\nlet neutral = [];\nlet fontSizes = [];\nlet typography = [];\nlet spacing = [];\nlet lightTheme = [];\nlet darkTheme = [];\n\nfunction constructCSSVars() {\n    //get the token data\n    fetch('../data/tokens-v1.json')\n        .then(res => res.json()) // the .json() method parses the JSON response into a JS object literal\n        .then(data => {\n            //send the data to be sorted\n            sortData(data);\n        });\n}\nconstructCSSVars();\n\n\nfunction sortData(data) {\n    //define globals vs themes\n    let globalData = data.global;\n    let lightData = data.light;\n    let darkData = data.dark;\n   \n\n    //create ref primary css vars\n    for (let key in globalData['color']['primary']) {\n        primary.push(\n            `--global-color-primary-${key}: ${globalData['color']['primary'][key].value};`\n        );\n    }\n\n    //create ref neutral css vars\n    for (let key in globalData['color']['neutral']) {\n\n        neutral.push(`--global-color-neutral-${key}: ${globalData['color']['neutral'][key].value};`);\n    }\n\n    //create ref fonts css vars\n    for (let key in globalData['fontSize']) {\n\n        fontSizes.push(\n            `--global-fontSize-${key}: ${globalData['fontSize'][key].value}px;`\n        );   \n    }\n\n    for (let key in globalData['fontFamilies']) {\n\n        fontSizes.push(\n            `--global-fontFamilies-${key}: ${globalData['fontFamilies'][key].value};`\n        );   \n    }\n\n    //create typography css vars\n    for (let key in globalData['typeface']) {\n\n        if (key === 'headline') {\n\n            typography.push(\n                `--global-typeface-${key}-family: var(--global-${setCSSVarName(globalData['typeface'][key].value['fontFamily'])});`,\n                `--global-typeface-${key}-size: var(--global-${setCSSVarName(globalData['typeface'][key].value['fontSize'])});`\n            );\n        } else if (key === 'copy') {\n            typography.push(\n                `--global-typeface-${key}-family: var(--global-${setCSSVarName(globalData['typeface'][key].value['fontFamily'])});`,\n                `--global-typeface-${key}-size: var(--global-${setCSSVarName(globalData['typeface'][key].value['fontSize'])});`\n            );\n            \n        }\n        \n    }\n\n    // //create ref spacing css vars\n    for (let key in globalData['spacing']) {\n\n        spacing.push(\n            `--global-spacing-${key}: ${globalData['spacing'][key].value}px;`\n        );\n        \n    }\n\n    // //create ref radius css vars\n    // for (let key in globalData['radius-scale']) {\n\n    //     radius.push(\n    //         `--global-radius-scale-${key}: ${globalData['radius-scale'][key].value}px;`\n    //     );\n        \n    // }\n\n    // //create ref elevation css vars\n    // for (let key in globalData['elevation-scale']) {\n\n    //     let x = globalData['elevation-scale'][key].value['x'];\n    //     let y = globalData['elevation-scale'][key].value['y'];\n    //     let blur = globalData['elevation-scale'][key].value['blur'];\n    //     let spread = globalData['elevation-scale'][key].value['spread'];\n    //     let color = setCSSVarName(globalData['elevation-scale'][key].value['color']);\n\n    //     elevation.push(\n    //         `--global-elevation-scale-${key}: ${x}px ${y}px ${blur}px ${spread}px var(--global-${color});`\n    //     );\n        \n    // }\n\n\n\n    //create light-theme css vars\n    for (let key in lightData) {\n\n        lightTheme.push(\n            `--light-theme-${key}: var(--global-${setCSSVarName(lightData[key].value)});`\n        );\n        \n    }\n\n    //create dark-theme css vars\n    for (let key in darkData) {\n\n        darkTheme.push(\n            `--dark-theme-${key}: var(--global-${setCSSVarName(darkData[key].value)});`\n        );\n        \n    }\n\n    createStyleSheet();\n\n}\n\n//this is to alter tokens referencing other tokens, create a proper name\nfunction setCSSVarName(data) {\n    const chars = {'{':'','}':'','.':'-'};\n    let name = data;\n    return name.replace(/[{}.]/g, m => chars[m]);\n}\n\nfunction createStyleSheet() {\n    \n    // Create our shared stylesheet:\n    const globalStyles = new CSSStyleSheet();\n\n    globalStyles.replaceSync(\n        `\n        :root {\n            /* Color */\n            ${primary.join(' ')}\n            ${neutral.join(' ')}\n            /* Type */\n            ${fontSizes.join(' ')}\n            ${typography.join(' ')}\n            /* Scales */\n            ${spacing.join(' ')}\n            /* Themes */\n            ${lightTheme.join(' ')}\n            ${darkTheme.join(' ')}\n        }\n\n        `\n    );\n\n    // Apply the stylesheet to a document:\n    document.adoptedStyleSheets = [globalStyles];\n}\n\nexport { constructCSSVars }","import { Card } from \"./components/Card.js\";\nimport { constructCSSVars } from \"./utils/build-styles.js\";\n\ndocument.addEventListener('DOMContentLoaded', (e) => {\n\n    // Define the new web component(s)\n    if ('customElements' in window) {\n        customElements.define('custom-card', Card);\n    }\n\n    constructCSSVars();\n\n    //cache DOM elements\n    const themeSelect = document.getElementById('theme-select');\n    const siteHeader = document.getElementById('site-header');\n    const body = document.getElementsByTagName('body')[0];\n\n    themeSelect.addEventListener('change' , (e) => {\n\n        if(e.target.value === 'dark') {\n            siteHeader.classList.remove('light');\n            siteHeader.classList.add('dark');\n\n            body.classList.remove('light');\n            body.classList.add('dark');\n\n            const cardUpdated = new CustomEvent('cardUpdated', {\n                bubbles: true,\n                detail: { update: 'dark' }\n            });\n            dispatchEvent(cardUpdated);\n\n        } else { //light\n            siteHeader.classList.remove('dark');\n            siteHeader.classList.add('light');\n\n            body.classList.remove('dark');\n            body.classList.add('light');\n\n            const cardUpdated = new CustomEvent('cardUpdated', {\n                bubbles: true,\n                detail: { update: 'light' }\n            });\n            dispatchEvent(cardUpdated);\n        }\n\n    });\n\n\n\n    const options = {\n        element: ':root',\n        pretty: true\n    }\n\n\n    function testCSSVars() {\n        //get the token data\n        fetch('../data/tokens-v1.json')\n            .then(res => res.json()) // the .json() method parses the JSON response into a JS object literal\n            .then(data => {\n                //send the data to be sorted\n                console.log(data);\n                console.log(data.global);\n                console.log(data.global.refscale.primary);\n                //console.log(Object.keys(data.global.refscale.primary.primary10).map(v => ({[v]: {...data[v]}})));\n                //console.log(jsonToCssVariables(data.global.refscale.primary, options));\n            });\n    }\n    //testCSSVars();\n\n   \n\n    function jsonToCssVariables(json, options) {\n        options = options || {}\n      \n        const offset = options.offset === undefined ? 0 : options.offset\n      \n        let count = 0\n        let output = `${options.element ? options.element : ':host'} {${options.pretty ? '\\n' : ''}`\n      \n        for (let key in json) {\n          if (count >= offset) {\n            let value = json[key].value\n      \n            if (!isNaN(value) && value !== 0) {\n              value += options.unit === undefined ? 'px' : options.unit\n            }\n      \n            output += `${options.pretty ? '\\t' : ''}--${key}: ${value};${options.pretty ? '\\n' : ''}`\n          }\n      \n          count++\n        }\n      \n        output += '}'\n      \n        return output\n      }\n\n\n});"],"mappings":"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"}