{"version":3,"names":["Sheet","CSSStyleSheet","replaceSync","Card","_HTMLElement","_inherits","_super","_this","_classCallCheck","this","call","templateContent","document","getElementById","content","shadowRoot","attachShadow","mode","appendChild","cloneNode","adoptedStyleSheets","headline","querySelector","copy","key","get","value","_wrapNativeSuper","HTMLElement","primary","neutral","fontSizes","typography","spacing","lightTheme","darkTheme","constructCSSVars","fetch","then","res","json","data","globalData","global","lightData","light","darkData","dark","push","concat","setCSSVarName","globalStyles","join","sortData","chars","replace","m","addEventListener","e","window","customElements","define","themeSelect","siteHeader","cardContainer","submiBtn","message","title","alert","body","getElementsByTagName","preventDefault","innerHTML","sanitizeCopy","sanitizeHTML","sanitizeTitle","cmsPathPost","method","headers","publicKey","JSON","stringify","_state","response","console","log","catch","error","postArtcile","style","display","classList","remove","add","target","cardUpdated","CustomEvent","bubbles","detail","update","dispatchEvent","str","c","charCodeAt","cards","forEach","card","cardElm","createElement","headlineElm","slot","copyElm","append"],"sources":["../../src/js/components/CardCss.js","../../src/js/components/Card.js","../../src/js/utils/build-styles.js","../../src/js/index.js"],"sourcesContent":["// Create our component stylesheet:\nconst Sheet = new CSSStyleSheet();\nSheet.replaceSync(\n    `\n\n    :host {\n\n        display: block;\n        width: 100%;\n        padding: var(--global-spacing-scale-large);\n\n        margin: 1rem 0;\n    }\n        p, h2 {\n            margin:0px;\n            padding:0px;\n            line-height: 1.3;\n        }\n\n        h2 {\n            font-family: var(--global-typeface-headline-family);\n            font-size: var(--global-typeface-headline-size);\n            font-weight: 300;\n            margin-bottom: 0.4rem;\n        }\n\n        p {\n            font-family: var(--global-typeface-copy-family);\n            font-weight: 400;\n            font-size: var(--global-typeface-copy-size);\n        }\n\n        // h2.light, p.light{\n        //     color: var(--light-theme-card-text-color);\n        // }\n\n        // h2.dark, p.dark{\n        //     color: var(--dark-theme-card-text-color);\n        // }\n\n       \n    `\n);\n\nexport { Sheet }","import { Sheet } from \"./CardCss.js\";\n\nclass Card extends HTMLElement {\n\n\tstatic get observedAttributes() { \n\t\treturn ['data-theme']; //track the theme e.g. light / dark\n\t}\n\n\tconstructor() {\n\t\t// Always call super first in constructor\n\t\tsuper();\n\t\tlet template = document.getElementById('custom-card-template');\n\t\tlet templateContent = template.content;\n\n\t\tconst shadowRoot = this.attachShadow({ mode: 'open' });\n\t\tshadowRoot.appendChild(templateContent.cloneNode(true));\n\n        shadowRoot.adoptedStyleSheets = [Sheet];\n\n\t\t//get elements needed for control\n\t\tthis.headline = this.shadowRoot.querySelector('.headline');\n\t\tthis.copy = this.shadowRoot.querySelector('.copy');\n\n\t}\n\n\tconnectedCallback() {\n\t\t//console.log('connected', this.dataset.theme);\n\t\t//set styles on load\n\t\t// this.updateStyle();\n\n\t\t// //listen it the theme is updated with the form input\n\t\t// window.addEventListener('cardUpdated', (e) => {\n\t\t// \tthis.setAttribute('data-theme', e.detail.update);\n\t\t// });\n\t\t\n\n\t\t\n\n\t}\n\n\tdisconnectedCallback() {\n\t\t//console.log('disconnected', this);\n\t}\n\n\n\t// attributeChangedCallback(name, oldValue, newValue) {\n\t// \t//console.log('element attributes changed.');\n\t// \tthis.updateStyle();\n\t// }\n\n\t// updateStyle() {\n\t\t\n\t// \tif (this.dataset.theme === 'light') {\n\t// \t\t//remove dark if present\n\t// \t\tthis.headline.classList.remove('dark');\n\t// \t\tthis.copy.classList.remove('dark');\n\t// \t\tthis.classList.remove('light-bg');\n\n\t// \t\t//add light class styles\n\t// \t\tthis.headline.classList.add(this.dataset.theme);\n\t// \t\tthis.copy.classList.add(this.dataset.theme);\n\t// \t\tthis.classList.add('dark-bg');\n\n\t// \t} else {\n\t// \t\t//remove light if present\n\t// \t\tthis.headline.classList.remove('light');\n\t// \t\tthis.copy.classList.remove('light');\n\t// \t\tthis.classList.remove('dark-bg');\n\n\t// \t\t//add dark class styles\n\t// \t\tthis.headline.classList.add(this.dataset.theme);\n\t// \t\tthis.copy.classList.add(this.dataset.theme);\n\t// \t\tthis.classList.add('light-bg');\n\t// \t}\n\n\t// \t//elevation & radius added, not connected to theme change\n\t// \tthis.classList.add('emphasis-'+this.dataset.elevation);\n\t// \tthis.classList.add('radius-'+this.dataset.radius);\n\t// }\n\n\n\t\n\n}\n\nexport { Card }","\n// Arrays for token sets\nlet primary = [];\nlet neutral = [];\nlet fontSizes = [];\nlet typography = [];\nlet spacing = [];\nlet lightTheme = [];\nlet darkTheme = [];\n\nfunction constructCSSVars() {\n    //get the token data\n    fetch('../data/tokens.json')\n        .then(res => res.json()) // the .json() method parses the JSON response into a JS object literal\n        .then(data => {\n            //send the data to be sorted\n            sortData(data);\n        });\n}\nconstructCSSVars();\n\n\nfunction sortData(data) {\n    //define globals vs themes\n    let globalData = data.global;\n    let lightData = data.light;\n    let darkData = data.dark;\n   \n\n    //create ref primary css vars\n    for (let key in globalData['color']['primary']) {\n        primary.push(\n            `--global-color-primary-${key}: ${globalData['color']['primary'][key].value};`\n        );\n    }\n\n    //create ref neutral css vars\n    for (let key in globalData['color']['neutral']) {\n\n        neutral.push(`--global-color-neutral-${key}: ${globalData['color']['neutral'][key].value};`);\n    }\n\n    //create ref fonts css vars\n    for (let key in globalData['fontSize']) {\n\n        fontSizes.push(\n            `--global-fontSize-${key}: ${globalData['fontSize'][key].value}px;`\n        );   \n    }\n\n    for (let key in globalData['fontFamilies']) {\n\n        fontSizes.push(\n            `--global-fontFamilies-${key}: ${globalData['fontFamilies'][key].value};`\n        );   \n    }\n\n    //create typography css vars\n    for (let key in globalData['typeface']) {\n\n        if (key === 'headline') {\n\n            typography.push(\n                `--global-typeface-${key}-family: var(--global-${setCSSVarName(globalData['typeface'][key].value['fontFamily'])});`,\n                `--global-typeface-${key}-size: var(--global-${setCSSVarName(globalData['typeface'][key].value['fontSize'])});`\n            );\n        } else if (key === 'copy') {\n            typography.push(\n                `--global-typeface-${key}-family: var(--global-${setCSSVarName(globalData['typeface'][key].value['fontFamily'])});`,\n                `--global-typeface-${key}-size: var(--global-${setCSSVarName(globalData['typeface'][key].value['fontSize'])});`\n            );\n            \n        }\n        \n    }\n\n    // //create ref spacing css vars\n    for (let key in globalData['spacing']) {\n\n        spacing.push(\n            `--global-spacing-${key}: ${globalData['spacing'][key].value}px;`\n        );\n        \n    }\n\n    //create light-theme css vars\n    for (let key in lightData) {\n\n        lightTheme.push(\n            `--light-theme-${key}: var(--global-${setCSSVarName(lightData[key].value)});`\n        );\n        \n    }\n\n    //create dark-theme css vars\n    for (let key in darkData) {\n\n        darkTheme.push(\n            `--dark-theme-${key}: var(--global-${setCSSVarName(darkData[key].value)});`\n        );\n        \n    }\n\n    createStyleSheet();\n\n}\n\n//this is to alter tokens referencing other tokens, create a proper name\nfunction setCSSVarName(data) {\n    const chars = {'{':'','}':'','.':'-'};\n    let name = data;\n    return name.replace(/[{}.]/g, m => chars[m]);\n}\n\nfunction createStyleSheet() {\n    \n    // Create our shared stylesheet:\n    const globalStyles = new CSSStyleSheet();\n\n    globalStyles.replaceSync(\n        `\n        :root {\n            /* Color */\n            ${primary.join(' ')}\n            ${neutral.join(' ')}\n            /* Type */\n            ${fontSizes.join(' ')}\n            ${typography.join(' ')}\n            /* Scales */\n            ${spacing.join(' ')}\n            /* Themes */\n            ${lightTheme.join(' ')}\n            ${darkTheme.join(' ')}\n        }\n\n        `\n    );\n\n    // Apply the stylesheet to a document:\n    document.adoptedStyleSheets = [globalStyles];\n}\n\nexport { constructCSSVars }","import { Card } from \"./components/Card.js\";\nimport { constructCSSVars } from \"./utils/build-styles.js\";\n\ndocument.addEventListener('DOMContentLoaded', (e) => {\n\n    // Define the new web component(s)\n    if ('customElements' in window) {\n        customElements.define('custom-card', Card);\n    }\n\n    constructCSSVars();\n\n    //cache DOM elements\n    const themeSelect = document.getElementById('theme-select');\n    const siteHeader = document.getElementById('site-header');\n    const cardContainer = document.getElementById('card_container');\n    const submiBtn = document.getElementById('submit_btn');\n    const message = document.getElementById('message');\n    const title = document.getElementById('title');\n    const alert = document.getElementById('alert');\n    const body = document.getElementsByTagName('body')[0];\n\n    submiBtn.addEventListener('click' , (e) => {\n        e.preventDefault();\n        alert.innerHTML = \"\";\n        if (title.value !== '' && message.value !== '') {\n            postArtcile(title.value, message.value);\n            alert.style.display = \"block\";\n            alert.classList.remove('error');\n            alert.classList.add('sucess');\n            alert.innerHTML = \"Message submitted!\";\n        } else {\n            alert.style.display = \"block\";\n            alert.classList.remove('sucess');\n            alert.classList.add('error');\n            alert.innerHTML = \"Fill in both title and message!\";\n        }\n        //console.log(title.value, message.value);\n        //postArtcile(title.value, message.value);\n    });\n\n    themeSelect.addEventListener('change' , (e) => {\n\n        if(e.target.value === 'dark') {\n            siteHeader.classList.remove('light');\n            siteHeader.classList.add('dark');\n\n            body.classList.remove('light');\n            body.classList.add('dark');\n\n            const cardUpdated = new CustomEvent('cardUpdated', {\n                bubbles: true,\n                detail: { update: 'dark' }\n            });\n            dispatchEvent(cardUpdated);\n\n        } else { //light\n            siteHeader.classList.remove('dark');\n            siteHeader.classList.add('light');\n\n            body.classList.remove('dark');\n            body.classList.add('light');\n\n            const cardUpdated = new CustomEvent('cardUpdated', {\n                bubbles: true,\n                detail: { update: 'light' }\n            });\n            dispatchEvent(cardUpdated);\n        }\n\n    });\n\n    const cmsPathPost = 'https://randywalton.ca/ecuad/cms/api/content/item/exampleArticles';\n    const cmsPathGet = 'https://randywalton.ca/ecuad/cms/api/content/items/exampleArticles';\n    const publicKey = 'API-9c67173d397298b9451f535609fb708214598b83';\n\n    function getStorySubmission() {\n        // fetch('https://randywalton.ca/temp/testing-headless/api/content/item/get/test?token=API-c4f4deeb91424bff8ad440855223d87e1db9a0fd')\n        //     .then(collections => collections.json())\n        //     .then(collections => console.log(collections));\n\n\n            \n\n        fetch(cmsPathGet, {\n            method: 'GET',\n            headers: {\n                \"api-key\": publicKey\n            }\n            })\n            .then(response => response.json())\n            .then(response => {\n                console.log(response);\n                buildCards(response);\n                if (response.error) {\n                    console.log('problem!', response.error);\n                }\n\n            });\n    }\n    getStorySubmission();\n\n\n    function buildCards(cards) {\n\n        // <custom-card class=\"card\" data-theme=\"light\" data-elevation=\"flat\" data-radius=\"none\">\n        //     <span slot=\"headline\">Headline</span>\n        //     <span slot=\"copy\">Copy</span>\n        // </custom-card>\n\n        console.log(cards, \" build\");\n\n        cards.forEach(card => {\n\n            console.log(card.title, \" single\");\n            \n            const cardElm = document.createElement('custom-card');\n            cardElm.classList.add('card');\n\n            const headlineElm = document.createElement('span');\n            headlineElm.slot = \"headline\";\n            headlineElm.innerHTML = card.title;\n\n            const copyElm = document.createElement('span');\n            copyElm.slot = \"copy\";\n            copyElm.innerHTML = card.copy;\n\n            cardElm.append(headlineElm, copyElm);\n            \n            cardContainer.append(cardElm);\n\n        });\n    }\n\n\n\n    function postArtcile(title, copy) {\n\n        let sanitizeCopy = sanitizeHTML(copy);\n        let sanitizeTitle = sanitizeHTML(title);\n\n        fetch(cmsPathPost, {\n            method: 'POST',\n            headers: {\n                \"api-key\": publicKey,\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                data: {\n                    \"title\": `${sanitizeTitle}`,\n                    \"copy\": `${sanitizeCopy}`,\n                    \"_state\": 1 //do not publish!\n                }\n            })\n        })\n            .then(response => response.json())\n            .then(response => {\n                console.log(response);\n\n                // if (!response.error) {\n                //     //hide form and show thank you, continue to clouds\n                //     this.showThankYou();\n                //     //turn off spinner\n                //     this.submitBtn.querySelector('.spinner').style.display = 'none';\n\n                // } else {\n                //     this.error('Error, can not submit your story, please try again.');\n                //     //turn off spinner\n                //     this.submitBtn.querySelector('.spinner').style.display = 'none';\n                //     //activate the submit button again\n                //     this.submitBtn.classList.remove('disable');\n                // }\n\n            })\n            .catch(error => {\n                console.log('problem!', error);\n            });\n\n            \n    }\n\n    function sanitizeHTML(str) {\n        return str.replace(/[^\\w. ]/gi, function (c) {\n            return '&#' + c.charCodeAt(0) + ';';\n        });\n    }\n\n\n\n});"],"mappings":"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"}